#!/bin/bash

# Fix 1: Update Sequential Queue to Save URLs Immediately
# This ensures URLs are saved even if transcription fails

echo "========================================="
echo "  FIX 1: SEQUENTIAL QUEUE URL SAVING"
echo "========================================="
echo "Generated at: $(date)"
echo ""

echo "üîß PROBLEM IDENTIFIED:"
echo "  - Sequential queue uploads files to MinIO ‚úÖ"
echo "  - But doesn't save URLs to database ‚ùå"
echo "  - URLs only saved after transcription completes ‚ùå"
echo "  - If transcription fails, URLs are lost ‚ùå"
echo ""

echo "üìù SOLUTION:"
echo "  - Save URLs immediately after MinIO upload"
echo "  - Don't wait for transcription to complete"
echo "  - This ensures URLs are always saved"
echo ""

echo "üîß CODE CHANGES NEEDED:"
echo "======================="
echo ""
echo "File: src/queue/sequentialQueue.ts"
echo "Location: After MinIO upload, before queuing transcription"
echo ""
echo "ADD THIS CODE after line ~240 (after MinIO upload):"
echo ""
echo "// Save URLs to database immediately after MinIO upload"
echo "const updatedSessionEvent = await prisma.sessionEvent.update({"
echo "    where: { id: sessionEvent.id },"
echo "    data: {"
echo "        incommingfileUrl: \`/\${BUCKET_NAME}/\${baseFileName}-in.wav\`,"
echo "        outgoingfileUrl: \`/\${BUCKET_NAME}/\${baseFileName}-out.wav\`"
echo "    }"
echo "});"
echo ""
echo "console.log(\`Saved URLs to database for session \${sessionEvent.id}\`);"
echo ""

echo "üîß COMPLETE CODE BLOCK TO ADD:"
echo "=============================="
echo ""
echo "// After MinIO upload (around line 240)"
echo "console.log(\"Uploaded both files to MinIO successfully\");"
echo ""
echo "// Save URLs to database immediately"
echo "try {"
echo "    const updatedSessionEvent = await prisma.sessionEvent.update({"
echo "        where: { id: sessionEvent.id },"
echo "        data: {"
echo "            incommingfileUrl: \`/\${BUCKET_NAME}/\${baseFileName}-in.wav\`,"
echo "            outgoingfileUrl: \`/\${BUCKET_NAME}/\${baseFileName}-out.wav\`"
echo "        }"
echo "    });"
echo "    console.log(\`‚úÖ Saved URLs to database for session \${sessionEvent.id}\`);"
echo "} catch (urlError) {"
echo "    console.error(\`‚ùå Failed to save URLs for session \${sessionEvent.id}:\`, urlError);"
echo "    // Don't fail the entire process, just log the error"
echo "}"
echo ""

echo "üéØ BENEFITS OF THIS FIX:"
echo "========================"
echo "‚úÖ URLs saved immediately after MinIO upload"
echo "‚úÖ No dependency on transcription completion"
echo "‚úÖ Files are accessible even if transcription fails"
echo "‚úÖ Better error handling and logging"
echo "‚úÖ Prevents data loss"
echo ""

echo "üöÄ NEXT STEPS:"
echo "=============="
echo "1. Apply this code change to sequentialQueue.ts"
echo "2. Deploy the updated code"
echo "3. Test with new calls"
echo "4. Run fix_transcription_queue.sh to fix transcription issues"
echo "5. Run retry_failed_transcriptions.sh to process old failed calls"
echo ""

echo "Fix 1 completed! Apply these changes to your codebase."
