#!/bin/bash

# Commands to run on your PRODUCTION SERVER (31.184.134.153)
# Copy and paste these commands on your production server to test file server connectivity

echo "========================================="
echo "  FILE SERVER TESTING COMMANDS"
echo "  Run these on your PRODUCTION SERVER"
echo "========================================="
echo ""

echo "üîß COPY AND RUN THESE COMMANDS ON 31.184.134.153:"
echo "=================================================="
echo ""

echo "# 1. Test file server connectivity (without auth)"
echo "curl -I 'http://94.182.56.132/tmp/two-channel/stream-audio-incoming.php?recfile=14040705-083814-09034414112-2952'"
echo ""

echo "# 2. Test with current credentials from your code"
echo "curl -I --user 'Tipax:Goz@r!SimotelTip@x!1404' 'http://94.182.56.132/tmp/two-channel/stream-audio-incoming.php?recfile=14040705-083814-09034414112-2952'"
echo ""

echo "# 3. Test multiple files from the failed batch"
echo "curl -I --user 'Tipax:Goz@r!SimotelTip@x!1404' 'http://94.182.56.132/tmp/two-channel/stream-audio-incoming.php?recfile=14040705-083817-01144236109-2959'"
echo "curl -I --user 'Tipax:Goz@r!SimotelTip@x!1404' 'http://94.182.56.132/tmp/two-channel/stream-audio-incoming.php?recfile=14040705-083927-09111353852-2610'"
echo "curl -I --user 'Tipax:Goz@r!SimotelTip@x!1404' 'http://94.182.56.132/tmp/two-channel/stream-audio-incoming.php?recfile=14040705-083947-09116914583-2708'"
echo ""

echo "# 4. Test with a successful call from earlier that day (hour 7)"
echo "# First get a successful filename from hour 7:"
echo "docker exec -e PGPASSWORD='StrongP@ssw0rd123' postgres psql -U postgres -d opera_qc -t -A -c \"SELECT filename FROM \\\"SessionEvent\\\" WHERE DATE(date) = '1404-07-05' AND EXTRACT(HOUR FROM date) = 7 AND transcription IS NOT NULL LIMIT 1;\""
echo ""
echo "# Then test that successful file (replace FILENAME with actual filename from above):"
echo "curl -I --user 'Tipax:Goz@r!SimotelTip@x!1404' 'http://94.182.56.132/tmp/two-channel/stream-audio-incoming.php?recfile=FILENAME-in'"
echo ""

echo "# 5. Check what HTTP responses you get:"
echo "echo '=== Testing Failed Call File ==='"
echo "curl -v --user 'Tipax:Goz@r!SimotelTip@x!1404' 'http://94.182.56.132/tmp/two-channel/stream-audio-incoming.php?recfile=14040705-083814-09034414112-2952-in' 2>&1 | head -20"
echo ""

echo "# 6. Test if the file server is accessible at all"
echo "curl -I 'http://94.182.56.132/'"
echo ""

echo "# 7. Check DNS resolution"
echo "nslookup 94.182.56.132"
echo "ping -c 3 94.182.56.132"
echo ""

echo "========================================="
echo "  WHAT TO LOOK FOR:"
echo "========================================="
echo ""
echo "‚úÖ SUCCESS INDICATORS:"
echo "  - HTTP 200 OK: File exists and credentials work"
echo "  - HTTP 404 Not Found: Credentials work but file doesn't exist"
echo ""
echo "‚ùå PROBLEM INDICATORS:"
echo "  - HTTP 401 Unauthorized: Credentials are wrong/expired"
echo "  - HTTP 403 Forbidden: Access denied"
echo "  - HTTP 500 Internal Server Error: Server-side issue"
echo "  - Connection timeout/refused: Server is down"
echo ""
echo "üîç EXPECTED RESULTS:"
echo "  - If you get HTTP 404 for failed calls: Files were never stored"
echo "  - If you get HTTP 401 for all calls: Authentication issue"
echo "  - If you get HTTP 200 for successful calls: Credentials work"
echo ""

echo "========================================="
echo "  DIAGNOSIS BASED ON RESULTS:"
echo "========================================="
echo ""
echo "SCENARIO 1: All calls return HTTP 401"
echo "  ‚Üí Authentication credentials changed on 1404-07-05"
echo "  ‚Üí Need to update credentials in your code"
echo ""
echo "SCENARIO 2: Failed calls return HTTP 404, successful calls return HTTP 200"
echo "  ‚Üí Files were never properly stored during the incident"
echo "  ‚Üí File server was working but your app couldn't download"
echo ""
echo "SCENARIO 3: All calls return HTTP 404"
echo "  ‚Üí Files have been deleted/archived from the server"
echo "  ‚Üí Check server retention policy"
echo ""
echo "SCENARIO 4: Connection timeout/refused"
echo "  ‚Üí File server is currently down"
echo "  ‚Üí Same issue that occurred on 1404-07-05"
echo ""

echo "RUN THESE COMMANDS ON YOUR PRODUCTION SERVER AND SHARE THE RESULTS!"
